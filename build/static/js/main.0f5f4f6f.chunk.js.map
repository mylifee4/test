{"version":3,"sources":["BOM/BOM_Input/BOM_User_Input_Step1.js","BOM/BOM_Input/BOM_User_Input_Step2.js","BOM/BOM_Input/BOM_User_Input.js","json/bom_data_dummy.js","BOM/BOM_PBS/PBS_List.js","BOM/BOM_Tree.js","img/button_arrow.PNG","backup/Input1Main.js","backup/Input2Main.js","test/test_excel.js","App.js","reportWebVitals.js","index.js"],"names":["BOM_User_Input_Step1","state","result_list","this","setState","props","parent_state","className","type","value","onChange","e","setListValue","onBlur","wordCheck","onInput","numberCheck","to","React","Component","BOM_User_Input_Step2","placeholder","onClick","bomlistSubmit","alert","history","push","pathname","input_key_list","input_name_list","bom_list_change_tree","bom_list","id","bomcd","item_name","confirm","status","count","sort","first","second","result_arr","root_level","prev_level_code","parents_list","corrent_level","i","length","str","split","data_add","children","undefined","x","data","index","code","level","Column","Table","HeaderCell","Cell","list","PBS_List","mode","handleMenuClick","target","dataset","set","sessionStorage","setItem","data-set","isTree","rowKey","rowHeight","height","width","wordWrap","renderTreeToggle","icon","rowData","expand","Icon","verticalAlign","dataKey","treeCol","TreeTable","align","send_text_list","ExcelFile","ReactExport","ExcelSheet","multiDataSet","columns","title","wpx","wch","style","font","sz","bold","fill","patternType","fgColor","rgb","underline","italic","strike","outline","shadow","App","exact","path","component","BOM_Tree","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f5f4f6f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './BOM_User_Input_Step.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass BOM_User_Input_Step1 extends React.Component {\r\n\r\n    state = {\r\n        result_list: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ result_list: this.props.parent_state.result_list });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const { result_list } = this.state;\r\n\r\n        return (\r\n            <div className='display-flex'>\r\n\r\n                {/* BOM 사용자 입력 스텝 1 */}\r\n\r\n                <div>\r\n                    <div className='bom-user-input-step1-input-div-wrap'>\r\n\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>BOM Code </p>\r\n                            <select><option>01</option></select>\r\n                        </div>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>장치 명</p>\r\n                            <input type='text' value={result_list['device_name']} onChange={(e) => this.props.setListValue('device_name', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n\r\n\r\n                        <fieldset className='bom-user-input-step1-count-header'>\r\n                            <legend>차량 별 수량</legend>\r\n                        </fieldset>\r\n\r\n                        <div className='bom-user-input-step1-count-box-wrap'>\r\n                            <div className='bom-user-input-step1-count-box-header display-flex'>\r\n                                <p className='margin-left-0'>Ass'y</p>\r\n                                <p>TC1</p>\r\n                                <p>M1</p>\r\n                                <p>M2</p>\r\n                                <p>T1</p>\r\n                                <p>M2</p>\r\n                                <p>T2</p>\r\n                                <p>T1</p>\r\n                                <p>M1</p>\r\n                                <p>M2</p>\r\n                                <p>TC2</p>\r\n                            </div>\r\n\r\n                            <div className='bom-user-input-step1-count-box-bottom display-flex'>\r\n                                <input type='text' value={result_list['Assy']} onChange={(e) => this.props.setListValue(`Assy`, e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} className='margin-left-0' />\r\n                                <input type='text' value={result_list['TC1_1']} onChange={(e) => this.props.setListValue('TC1_1', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['M1_2']} onChange={(e) => this.props.setListValue('M1_2', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['M2_3']} onChange={(e) => this.props.setListValue('M2_3', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['T1_4']} onChange={(e) => this.props.setListValue('T1_4', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['M2_5']} onChange={(e) => this.props.setListValue('M2_5', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['T2_6']} onChange={(e) => this.props.setListValue('T2_6', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['T1_7']} onChange={(e) => this.props.setListValue('T1_7', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['M1_8']} onChange={(e) => this.props.setListValue('M1_8', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['M2_9']} onChange={(e) => this.props.setListValue('M2_9', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                                <input type='text' value={result_list['TC2_10']} onChange={(e) => this.props.setListValue('TC2_10', e)}\r\n                                    onInput={(e) => this.props.numberCheck(e)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='bom-user-input-step1-input-div-wrap'>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>차량의 위치</p>\r\n                            <select value={result_list['location']} onChange={(e) => this.props.setListValue('location', e)}>\r\n                                <option>선택해주세요</option>\r\n                                <option>상하</option>\r\n                                <option>옥상</option>\r\n                                <option>실내</option>\r\n                                <option>대차</option>\r\n                                <option>운전실</option>\r\n                                <option>차체</option>\r\n                                <option>기타</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>제작사 코드</p>\r\n                            <input type='text' value={result_list['producer_code']} onChange={(e) => this.props.setListValue('producer_code', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>규격</p>\r\n                            <input type='text' value={result_list['spec']} onChange={(e) => this.props.setListValue('spec', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>단위</p>\r\n                            <input type='text' value={result_list['unit']} onChange={(e) => this.props.setListValue('unit', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>재질</p>\r\n                            <input type='text' value={result_list['material']} onChange={(e) => this.props.setListValue('material', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n\r\n                        <div className='bom-user-input-step1-input-box'>\r\n                            <p className='text-bold'>도면번호</p>\r\n                            <input type='text' value={result_list['drawing_number']} onChange={(e) => this.props.setListValue('drawing_number', e)}\r\n                                onBlur={(e) => this.props.wordCheck(e)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* /BOM 사용자 입력 스텝 1/ */}\r\n\r\n                <div>\r\n\r\n                    {/* 유저 BOM 입력 Step 2 버튼 */}\r\n\r\n                    <div className='bom-user-input-step1-link-wrap'>\r\n                        <Link to='/bom_user_step2' className='bom-user-input-step1-link'>\r\n                            →\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {/* /유저 BOM 입력 Step 2 버튼/ */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BOM_User_Input_Step1;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/* eslint no-restricted-globals: [\"off\"] */\r\n\r\nclass BOM_User_Input_Step2 extends React.Component {\r\n\r\n    state = {\r\n        result_list: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ result_list: this.props.parent_state.result_list });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { result_list } = this.state;\r\n\r\n        return (\r\n            <div className='display-flex'>\r\n\r\n                {/* 유저 BOM 입력 Step 1 버튼 */}\r\n                <div>\r\n                    <div className='bom-user-input-step2-link-wrap'>\r\n                        <Link to='/bom_user_step1' className='bom-user-input-step2-link'>\r\n                            ←\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {/* /유저 BOM 입력 Step 1 버튼/ */}\r\n\r\n                <div>\r\n                    <div className='bom-user-input-step2-contain'>\r\n\r\n                        {/* 유저 BOM 입력 스텝2 입력창 */}\r\n\r\n                        <div>\r\n                            <div className='bom-user-input-step1-input-div-wrap'>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>국/외산</p>\r\n                                    <select value={result_list['made']} onChange={(e) => this.props.setListValue('made', e)}>\r\n                                        <option>선택해주세요</option>\r\n                                        <option>국내산</option>\r\n                                        <option>해외산</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>제조국</p>\r\n                                    <input type='text' value={result_list['country']} onChange={(e) => this.props.setListValue('country', e)}\r\n                                        onBlur={(e) => this.props.wordCheck(e)} />\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>업체명</p>\r\n                                    <input type='text' value={result_list['company']} onChange={(e) => this.props.setListValue('company', e)}\r\n                                        onBlur={(e) => this.props.wordCheck(e)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='bom-user-input-step1-input-div-wrap'>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>LRU/LLRU</p>\r\n                                    <select value={result_list['necessary']} onChange={(e) => this.props.setListValue('necessary', e)}>\r\n                                        <option>선택해주세요</option>\r\n                                        <option>LRU</option>\r\n                                        <option>LLRU</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>예비품</p>\r\n                                    <select value={result_list['spare_parts']} onChange={(e) => this.props.setListValue('spare_parts', e)}>\r\n                                        <option>선택해주세요</option>\r\n                                        <option>O</option>\r\n                                        <option>X</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>단가 (원)</p>\r\n                                    <input type='text' value={result_list['price']}\r\n                                        onChange={(e) => this.props.setListValue('price', e)}\r\n                                        placeholder='숫자만 입력하세요' onInput={(e) => this.props.numberCheck(e, 'price')} />\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>제품의 기능</p>\r\n                                    <textarea className='bom-user-input-step2-first-textarea'\r\n                                        value={result_list['function']} onChange={(e) => this.props.setListValue('function', e)}></textarea>\r\n                                </div>\r\n                                <div className='bom-user-input-step1-input-box'>\r\n                                    <p className='text-bold'>비 고</p>\r\n                                    <textarea className='bom-user-input-step2-second-textarea'\r\n                                        value={result_list['remark']} onChange={(e) => this.props.setListValue('remark', e)}></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* /유저 BOM 입력 스텝2 입력창/ */}\r\n\r\n                        {/* 유저 BOM 입력 스텝2 버튼 */}\r\n\r\n                        <div className='bom-user-input-step2-button-wrap'>\r\n                            <button type='button'\r\n                                onClick={() => {\r\n                                    const retValue = this.props.bomlistSubmit();\r\n                                    if (retValue) {\r\n                                        alert();\r\n                                        this.props.history.push({ pathname: '/bom_user_step1', state: { result_list: this.props.parent_state.result_list } });\r\n                                    }\r\n                                }\r\n                                }>등록</button>\r\n                            <button type='button' onClick={() => {\r\n                                this.props.history.push('/bom_user_step1');\r\n                            }}\r\n                            >취소</button>\r\n                        </div>\r\n                        \r\n                        {/* /유저 BOM 입력 스텝2 버튼/ */}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BOM_User_Input_Step2;\r\n","import BOMUserInputStep1 from './BOM_User_Input_Step1'\r\nimport BOMUserInputStep2 from './BOM_User_Input_Step2'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst input_key_list = ['device_name', 'Assy', 'TC1_1', 'M1_2', 'M2_3', 'T1_4', 'M2_5', 'T2_6', 'T1_7', 'M1_8', 'M2_9', 'TC2_10', 'location', 'producer_code', 'spec', 'unit', 'material', 'drawing_number', 'made', 'country', 'company', 'necessary', 'spare_parts', 'price', 'function', 'remark'];\r\nconst input_name_list = ['장치 명', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량 별 수량', '차량의 위치', '제작사 코드', '규격', '단위', '재질', '도면번호', '국/외산', '제조국', '업체명', 'LRU/LLRU', '예비품', '단가(원)', '제품의 기능', '비 고'];\r\n\r\nclass BOM_User_Input extends React.Component {\r\n\r\n    state = {\r\n        result_list: {},\r\n        device_level_tag: null\r\n    }\r\n\r\n    // 건네받은 장치들 태그화 시켜서 장치 level 칸에 표시\r\n    deviceLevelTag = () => {\r\n        const local_list = [];\r\n        let result_text = '';\r\n\r\n        if (this.props.history.location.state !== undefined) {\r\n            const device_object = this.props.history.location.state.device_level_list;\r\n            let index = 0;\r\n\r\n            for (let key in device_object) {\r\n                local_list[index++] = device_object[key];\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < local_list.length; i++) {\r\n            if (i === 0) {\r\n                result_text = '' + local_list[0];\r\n            } else {\r\n                result_text = (result_text + '　　　>　　　' + local_list[i]);\r\n            }\r\n        }\r\n\r\n        this.setState({ device_level_tag: result_text });\r\n    }\r\n\r\n    // 입력값 객체 형태로 저장\r\n    setListValue = (key, e) => {\r\n        let local_obj = this.state.result_list;\r\n        local_obj[key] = e.target.value;\r\n\r\n        this.setState({ result_list: local_obj });\r\n    }\r\n\r\n    // 숫자만 들어가도록 , 단가는 3자리마다 쉼표 찍히도록\r\n    numberCheck = (e, flag) => {\r\n        e.target.value = e.target.value.replace(/[^0-9]/g, '');\r\n\r\n        if (flag === 'price') {\r\n            e.target.value = e.target.value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }\r\n    }\r\n\r\n    // 텍스트 입력 유효성 검증\r\n    wordCheck = (e) => {\r\n        const wordCheck = /^[가-힣\\w_]*$/g;\r\n        const whitespace = /^.*[\\s].*$/g;\r\n        const special_pattern = /[`~!@#$%^&*|\\\\\\'\\\";:\\/?]/gi;\r\n\r\n        if (whitespace.test(e.target.value) === true) {\r\n            alert('공백을 허용하지 않습니다');\r\n            return;\r\n        }\r\n\r\n        if (special_pattern.test(e.target.value) === true) {\r\n            alert('특수문자를 허용하지 않습니다');\r\n            return;\r\n        }\r\n\r\n        if (wordCheck.test(e.target.value) === false) {\r\n            alert('정확히 입력해주세요 (문자,숫자,_ 만 허용)');\r\n            return;\r\n        }\r\n    }\r\n\r\n    // 등록버튼 눌렀을 때 입력칸에 공백이 있나 검증\r\n    bomlistSubmit = () => {\r\n        const whitespace = /[\\s]/g;\r\n        let flag = false;\r\n\r\n        // 입력을 했는지 안했는지 확인하는 작업\r\n        for (let i = 0; i < input_key_list.length; i++) {\r\n            if (this.state.result_list[input_key_list[i]] === undefined ||\r\n                this.state.result_list[input_key_list[i]] === '' ||\r\n                whitespace.test(this.state.result_list[input_key_list[i]]) === true ||\r\n                this.state.result_list[input_key_list[i]] === '선택해주세요') {\r\n                alert(input_name_list[i] + '을 입력하세요');\r\n                return flag;\r\n            }\r\n        }\r\n\r\n        // 단가 3자리 마다 , 들어가는걸 없애고 보내기 위함\r\n        const local_obj = this.state.result_list;\r\n\r\n        local_obj['price'] = local_obj['price'].replace(/,/gi, '');\r\n        this.setState({ result_list: local_obj });\r\n\r\n        return true;\r\n    }\r\n\r\n    // 장치 목록을 history 로 준것이 있으면 장치 level 바에 표시할 수 있도록 state에 등록\r\n    componentDidMount() {\r\n        this.deviceLevelTag();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='bom-user-input-step1-contain'>\r\n\r\n                {/* 유저 헤더 */}\r\n\r\n                <div className='bom-user-header-wrap'>\r\n                    <div className='bom-user-header-flex-wrap'>\r\n                        <div className='bom-user-header-link'>BOM 등록</div>\r\n                        <div className='bom-user-header-link'>BOM LIST</div>\r\n                    </div>\r\n                    <div className='bom-user-header-logout'>LOGOUT</div>\r\n                </div>\r\n\r\n\r\n                {/* 유저 BOM 상태 상단 바 */}\r\n\r\n                <div className='bom-user-input-status-bar'>\r\n                    <p>\r\n                        BOM 정보 입력 (Step 1)\r\n                    </p>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <div className='bom-user-input-step1-main-wrap'>\r\n\r\n                        {/* 장치 level 바*/}\r\n\r\n                        <form>\r\n                            <fieldset className='bom-user-input-device-bar-fieldset'>\r\n                                <legend className='bom-user-input-device-bar-legend'><b>장치 Level</b></legend>\r\n                                <p>\r\n                                    {this.state.device_level_tag}\r\n                                </p>\r\n                            </fieldset>\r\n                        </form>\r\n\r\n                        <Router>\r\n                            <Switch>\r\n                                <Route exact path={'/bom_user_step1'}\r\n                                    render={(props) => <BOMUserInputStep1\r\n                                        {...props}\r\n                                        setListValue={this.setListValue}\r\n                                        parent_state={this.state}\r\n                                        numberCheck={this.numberCheck}\r\n                                        wordCheck={this.wordCheck} />} />\r\n                                <Route path={'/bom_user_step2'}\r\n                                    render={(props) => <BOMUserInputStep2\r\n                                        {...props}\r\n                                        bomlistSubmit={this.bomlistSubmit}\r\n                                        setListValue={this.setListValue}\r\n                                        parent_state={this.state}\r\n                                        numberCheck={this.numberCheck}\r\n                                        wordCheck={this.wordCheck} />} />\r\n                            </Switch>\r\n                        </Router>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BOM_User_Input;","function load_bom_data() {\r\n    const data = [\r\n        {\r\n            id: '2',\r\n            bomcd: 'BOMCD-05-00-00-00-0000-00-00',\r\n            item_name: '자체 및 연결 장치',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        {\r\n            id: '2-1',\r\n            bomcd: 'BOMCD-05-08-00-00-0000-00-00',\r\n            item_name: '등구류',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        {\r\n            id: '2-1-1-2',\r\n            bomcd: 'BOMCD-05-08-01-02-0000-00-00',\r\n            item_name: '전조등 LED 모듈',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6],\r\n        },\r\n        {\r\n            id: '2-1-1-2-1',\r\n            bomcd: 'BOMCD-05-08-01-02-0001-00-00',\r\n            item_name: 'LED 모듈',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-2-2',\r\n            bomcd: 'BOMCD-05-08-01-02-0002-00-00',\r\n            item_name: '렌즈 고정대',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-2-3',\r\n            bomcd: 'BOMCD-05-08-01-02-0003-00-00',\r\n            item_name: '렌즈',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-2-4',\r\n            bomcd: 'BOMCD-05-08-01-02-0004-00-00',\r\n            item_name: '커버',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-2-5',\r\n            bomcd: 'BOMCD-05-08-01-02-0005-00-00',\r\n            item_name: '몸체 패드',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-2-6',\r\n            bomcd: 'BOMCD-05-08-01-02-0006-00-00',\r\n            item_name: '둥근머리 스쿠류 나사',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16]\r\n        },\r\n        {\r\n            id: '2-1-1-3',\r\n            bomcd: 'BOMCD-05-08-01-03-0000-00-00',\r\n            item_name: '후미등 LED 모듈',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4]\r\n        },\r\n        {\r\n            id: '2-1-1-4',\r\n            bomcd: 'BOMCD-05-08-01-04-0000-00-00',\r\n            item_name: '전조/후미등 모듈 브라켓',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1',\r\n            bomcd: 'BOMCD-03-00-00-00-0000-00-00',\r\n            item_name : '보조전원장치',\r\n            confirm: 'V',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2],\r\n            status: '완료'\r\n        },\r\n        {\r\n            id: '1-1',\r\n            bomcd: 'BOMCD-03-01-00-00-0000-00-00',\r\n            item_name: 'SIV 인버터 박스',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1',\r\n            bomcd: 'BOMCD-03-01-01-00-0000-00-00',\r\n            item_name: '제어 유닛 [PCB PART]',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-1',\r\n            bomcd: 'BOMCD-03-01-01-01-0000-00-00',\r\n            item_name: 'GATE BOARD 1',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-2',\r\n            bomcd: 'BOMCD-03-01-01-02-0000-00-00',\r\n            item_name: 'GATE BOARD 2',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-3',\r\n            bomcd: 'BOMCD-03-01-01-03-0000-00-00',\r\n            item_name: 'DSP BOARD',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '2-1-1',\r\n            bomcd: 'BOMCD-05-08-01-00-0000-00-00',\r\n            item_name: 'LED 전조/후미등',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4],\r\n        },\r\n        {\r\n            id: '2-1-1-1',\r\n            bomcd: 'BOMCD-05-08-01-01-0000-00-00',\r\n            item_name: '몸체',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-4',\r\n            bomcd: 'BOMCD-03-01-01-04-0000-00-00',\r\n            item_name: 'SENS BOARD',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-7',\r\n            bomcd: 'BOMCD-03-01-01-07-0000-00-00',\r\n            item_name: 'PS1 BOARD',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-8',\r\n            bomcd: 'BOMCD-03-01-01-08-0000-00-00',\r\n            item_name: 'PS2 BOARD',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-5',\r\n            bomcd: 'BOMCD-03-01-01-05-0000-00-00',\r\n            item_name: 'DIN BOARD',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1-6',\r\n            bomcd: 'BOMCD-03-01-01-06-0000-00-00',\r\n            item_name: 'DOUT BOARD',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n\r\n    ]\r\n    return data;\r\n}\r\n\r\nfunction load_pbs_data() {\r\n    const data = [\r\n        {\r\n            id: '2',\r\n            bomcd: 'BOMCD-05-00-00-00-0000-00-00',\r\n            item_name: '자체 및 연결 장치',\r\n            confirm: '',\r\n            status: '완료',\r\n            count: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        {\r\n            id: '2-1',\r\n            bomcd: 'BOMCD-05-08-00-00-0000-00-00',\r\n            item_name: '등구류',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n        {\r\n            id: '1',\r\n            bomcd: 'BOMCD-03-00-00-00-0000-00-00',\r\n            item_name : '보조전원장치',\r\n            confirm: 'V',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2],\r\n            status: '완료'\r\n        },\r\n        {\r\n            id: '1-1',\r\n            bomcd: 'BOMCD-03-01-00-00-0000-00-00',\r\n            item_name: 'SIV 인버터 박스',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '1-1-1',\r\n            bomcd: 'BOMCD-03-01-01-00-0000-00-00',\r\n            item_name: '제어 유닛 [PCB PART]',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\r\n        },\r\n        {\r\n            id: '2-1-1',\r\n            bomcd: 'BOMCD-05-08-01-00-0000-00-00',\r\n            item_name: 'LED 전조/후미등',\r\n            confirm: '',\r\n            status: '담당자 설정',\r\n            count: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4],\r\n        },\r\n    ]\r\n    return data;\r\n}\r\n\r\n\r\nexport function bom_list_change_tree(value) {\r\n\r\n    let bom_list = null;\r\n\r\n    // db에서 온 데이터를 bomcd 기준으로 정렬시킴\r\n    if(value === 'bom_tree'){\r\n    bom_list = load_bom_data();\r\n    } else {\r\n        bom_list = load_pbs_data();\r\n    }\r\n    bom_list.sort((first, second) => { return first.bomcd < second.bomcd ? -1 : 1 });\r\n\r\n    // 최종 결과를 담아줄 변수\r\n    let result_arr = [];\r\n\r\n    // 현재 레벨 1의 bom_code 값 저장\r\n    let root_level = null;\r\n\r\n    // 한단계 전 (i-1) 데이터에 대한 bom_code 값 저장\r\n    let prev_level_code = null;\r\n\r\n    // 각 레벨에 대한 부모 정보들을 저장하고 있는 리스트\r\n    let parents_list = [];\r\n\r\n    // 현재 데이터의 레벨 저장\r\n    let corrent_level = -1;\r\n\r\n    // 리스트의 각 데이터들 루프\r\n    for (let i = 0; i < bom_list.length; i++) {\r\n\r\n        // 데이터의 bomcd를 토큰화 함    str[0] = 'BOMCD' , str[1] = '03'  ....\r\n        let str = bom_list[i].bomcd.split('-');\r\n\r\n        // 레벨 1 정보를 저장하고 , 레벨 1이 바뀌면 탐색 레벨과 부모 리스트들 초기화\r\n        if (root_level !== str[1]) {\r\n            root_level = str[1];\r\n\r\n            // 사용자 정의 피라미터를 추가\r\n            data_add(bom_list[i], 1, str[1]);\r\n\r\n            // 레벨 1 데이터에 자식을 넣을 수 있는 배열을 선언해줌\r\n            bom_list[i].children = [];\r\n\r\n            // 레벨 1이 바뀔 때 마다 부모 리스트 초기화\r\n            parents_list = [];\r\n            parents_list.push(bom_list[i]);\r\n\r\n            // 다음 노드의 비교 값으로 레벨 1 코드 값을 저장\r\n            prev_level_code = str[1];\r\n\r\n            // 탐색 레벨을 2로 초기화 해줌\r\n            corrent_level = 2;\r\n\r\n            // 레벨 1의 데이터들을 저장 , 레벨 1 데이터들만 리턴 하기 위함\r\n            result_arr.push(bom_list[i]);\r\n        } else {\r\n            // 현재 데이터가 전 데이터의 관계가 하위 레벨인지 (자식) , 동위 레벨인지 (형제) , 둘다 아닌지 를 구분함\r\n\r\n            /* 현재 데이터가 하위 레벨일 때 (자식) */\r\n            if (prev_level_code === str[corrent_level - 1]) {\r\n\r\n                // 부모 데이터가 children 피라미터를 갖고있는지 확인하고 없으면 만들어줌 \r\n                if (bom_list[i - 1].children === undefined) {\r\n                    bom_list[i - 1].children = [];\r\n                }\r\n\r\n                data_add(bom_list[i], corrent_level, str[corrent_level]);\r\n\r\n                // 부모 데이터의 children 에 데이터를 넣어줌\r\n                parents_list[corrent_level - 2].children.push(bom_list[i]);\r\n\r\n                // 비교 데이터 값을 현재 데이터로 변경, 탐색 레벨을 하나 올리고 , 부모 리스트에 현재 데이터 추가\r\n                prev_level_code = str[corrent_level++];\r\n                parents_list.push(bom_list[i]);\r\n\r\n\r\n            } else {\r\n                /* 둘다 아닐 때 (자식이나 형제가 아닐 때) */\r\n                if (str[corrent_level - 1] === '00' || str[corrent_level - 1] === '0000') {\r\n\r\n                    // 탐색 레벨을 공백이 아닌 레벨 까지 이동\r\n                    for (let x = corrent_level - 2; x > 1; x--) {\r\n                        if (str[x] !== '00' && str[x] !== '0000') {\r\n                            corrent_level = x;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // 전체 공백일 때를 위한 예외 처리\r\n                    if (str[corrent_level] === '00' && str[corrent_level] === '0000') {\r\n                        alert('공백 에러');\r\n                    } else {\r\n                        data_add(bom_list[i], corrent_level, str[corrent_level]);\r\n\r\n                        // 현재 레벨의 부모를 바꾸고 , 부모 데이터의 자식 목록에 데이터 추가\r\n                        parents_list[corrent_level - 1] = bom_list[i];\r\n                        parents_list[corrent_level - 2].children.push(bom_list[i]);\r\n\r\n                        // 비교 데이터 값을 현재 데이터로 변경, 탐색 레벨을 하나 올림\r\n                        prev_level_code = str[corrent_level++];\r\n                    }\r\n                } else {\r\n                    /* 동위 레벨일 때 (형제) */\r\n\r\n                    data_add(bom_list[i], corrent_level - 1, str[corrent_level - 1]);\r\n\r\n                    // 부모 데이터의 children에 데이터를 넣어줌\r\n                    parents_list[corrent_level - 3].children.push(bom_list[i]);\r\n\r\n                    // 현재 레벨에 대한 부모 데이터를 현재 데이터로 변경 , 비교 값 변경 , 깉은 레벨을 탐색하니 레벨 값은 올리지 않는다\r\n                    parents_list[corrent_level - 2] = bom_list[i];\r\n                    prev_level_code = str[corrent_level - 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result_arr;\r\n}\r\n\r\n\r\n// 사용자 정의 피라미터 추가\r\nfunction data_add(data, index, code) {\r\n    data.level = '' + index;\r\n    data['level_' + index] = data.item_name + '(' + code + ')';\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './PBS_List.css'\r\n\r\n// 트리테이블 더미 데이터\r\nimport { bom_list_change_tree } from '../../json/bom_data_dummy';\r\n\r\n// 트리 테이블 사용시 포함해야할 파일\r\nimport { Table, Icon } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css'\r\n\r\n// 트리 테이블 구조 분해 할당\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\n// 더미 데이터 가져오기\r\nconst list = bom_list_change_tree('pbs');\r\n\r\nclass PBS_List extends React.Component {\r\n\r\n    state = {\r\n        data: list,\r\n        mode : 'lv1'\r\n    };\r\n\r\n\r\n    handleMenuClick = e =>{\r\n\r\n        this.setState({\r\n            mode : e.target.dataset.set\r\n        })\r\n\r\n        sessionStorage.setItem('PBSMenuMode', e.target.dataset.set);\r\n    }\r\n\r\n\r\n    render() {\r\n        // this.state.data > data로 사용\r\n        const { data , mode } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='admin-bom-pbs-all'>\r\n\r\n                    {/* 관리자 헤더 */}\r\n\r\n                    <div className='admin-bom-pbs-header-div'>\r\n                        <div className='admin-bom-pbs-header-flex'>\r\n                            <div className='admin-bom-pbs-header-link'>프로젝트 관리</div>\r\n                            <div className='admin-bom-pbs-header-link'>사용자 관리</div>\r\n                            <Link className='admin-bom-pbs-header-link' to='/admin_pbs_list'>PBS 등록</Link>\r\n                            <Link className='admin-bom-pbs-header-link' to='/'>BOM Tree View</Link>\r\n                            <div className='admin-bom-pbs-header-link'>담당자 등록</div>\r\n                        </div>\r\n                        <div className='admin-bom-pbs-header-logout'>LOGOUT</div>\r\n                    </div>\r\n\r\n                    {/* /관리자 헤더/ */}\r\n\r\n                    {/* 관리자 PBS 등록 상단바 */}\r\n\r\n                    <div className='admin-user-title'>\r\n                        PBS LIST\r\n                    </div>\r\n\r\n                    {/* /관리자 PBS 등록 상단바/ */}\r\n\r\n                    <div className='admin-bom-pbs-content-div'>\r\n\r\n                        {/* 관리자 PBS Nav */}\r\n\r\n                        <nav className=\"admin-nav-menu\">\r\n                            <p className={`${mode === 'lv1' ? 'admin-user-nav-menu-selected' : ''} admin-nav-menu-p`} data-set=\"lv1\" onClick={this.handleMenuClick}>시스템 분류체계 Lv1 입력</p>\r\n                            <p className={`${mode === 'lv2' ? 'admin-user-nav-menu-selected' : ''} admin-nav-menu-p`} data-set=\"lv2\" onClick={this.handleMenuClick}>시스템 분류체계 Lv2 입력</p>\r\n                            <p className={`${mode === 'lv3' ? 'admin-user-nav-menu-selected' : ''} admin-nav-menu-p`} data-set=\"lv3\" onClick={this.handleMenuClick}>시스템 분류체계 Lv3 입력</p>\r\n                        </nav>\r\n\r\n                        {/* /관리자 PBS Nav/ */}\r\n\r\n                        {/* 관리자 PBS 테이블 */}\r\n\r\n                        <div className='admin-bom-pbs-table-div'>\r\n                            <Table\r\n                                className='admin-bom-pbs-table'\r\n                                isTree\r\n                                // defaultExpandAllRows\r\n\r\n                                // 데이터 탐색 기준 키 \r\n                                rowKey=\"id\"\r\n                                rowHeight={60}\r\n                                height={800}\r\n                                data={data}\r\n                                width={850}\r\n                                wordWrap\r\n\r\n                                // 아이콘 변경 프로퍼티\r\n                                renderTreeToggle={(icon, rowData, expand) => {\r\n                                    if (expand) {\r\n                                        return <Icon className='pbs-button' icon='minus-circle' />;\r\n                                    }\r\n                                    else {\r\n                                        return <Icon className='pbs-button' icon='plus-circle' />;\r\n                                    }\r\n                                }}\r\n                            >\r\n\r\n\r\n                                <Column width={250} verticalAlign={'middle'} className='pbs-row pbs-row-1'>\r\n                                    <HeaderCell>BOMCD</HeaderCell>\r\n                                    <Cell dataKey=\"bomcd\" />\r\n                                </Column>\r\n\r\n                                {/* treeCol  >  버튼이 생기는 위치 \r\n                                모든 레벨에 버튼을 붙이고 css에서 default로 버튼을 없앤 후 레벨에 맞는 곳에만 보여지도록 함*/}\r\n                                <Column width={150} treeCol={true} verticalAlign={'middle'} className='pbs-row pbs-row-2'>\r\n                                    <HeaderCell>Level_1</HeaderCell>\r\n                                    <Cell dataKey=\"level_1\" />\r\n                                </Column>\r\n\r\n                                <Column width={150} treeCol={true} verticalAlign={'middle'} className='pbs-row pbs-row-3'>\r\n                                    <HeaderCell>Level_2</HeaderCell>\r\n                                    <Cell dataKey='level_2' />\r\n                                </Column>\r\n\r\n                                <Column width={150} verticalAlign={'middle'} className='pbs-row pbs-row-4'>\r\n                                    <HeaderCell>Level_3</HeaderCell>\r\n                                    <Cell dataKey='level_3' />\r\n                                </Column>\r\n\r\n                                <Column width={150} verticalAlign={'middle'} className='pbs-row pbs-row-5'>\r\n                                    <HeaderCell>Status</HeaderCell>\r\n                                    <Cell dataKey='status' />\r\n                                </Column>\r\n                            </Table>\r\n                        </div>\r\n\r\n                        {/* /관리자 PBS 테이블/ */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PBS_List;\r\n","import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './BOM_Tree.css'\r\n\r\n// 트리 테이블 사용시 포함해야하는 파일\r\nimport { Table, Icon } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css'\r\n\r\n\r\n// 트리 테이블 더미 데이터\r\nimport { bom_list_change_tree } from '../json/bom_data_dummy';\r\n\r\n// 테이블 구조 분해 할당\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\n// 더미 데이터 가져오기\r\nconst data = bom_list_change_tree('bom_tree');\r\n\r\nclass TreeTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: data\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // this.state.data > data 로 사용\r\n        const { data } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='admin-bom-pbs-all'>\r\n\r\n                    {/* 관리자 헤더 */}\r\n\r\n                    <div className='admin-bom-pbs-header-div'>\r\n                        <div className='admin-bom-pbs-header-flex'>\r\n                            <div className='admin-bom-pbs-header-link'>프로젝트 관리</div>\r\n                            <div className='admin-bom-pbs-header-link'>사용자 관리</div>\r\n                            <Link className='admin-bom-pbs-header-link' to='/admin_pbs_list'>PBS 등록</Link>\r\n                            <Link className='admin-bom-pbs-header-link' to='/'>BOM Tree View</Link>\r\n                            <div className='admin-bom-pbs-header-link'>담당자 등록</div>\r\n                        </div>\r\n                        <div className='admin-bom-pbs-header-logout'>LOGOUT</div>\r\n                    </div>\r\n\r\n                    {/* /관리자 헤더/ */}\r\n\r\n                    {/* BOM Tree View 상단바 */}\r\n\r\n                    <div className='admin-user-title'>\r\n                        BOM Tree View\r\n                    </div>\r\n\r\n                    {/* /BOM Tree View 상단바/ */}\r\n\r\n                    {/* BOM Tree Table  */}\r\n\r\n                    <div className='bom-user-tree-table-div'>\r\n                        <Table\r\n                            className='bom-user-tree-table'\r\n                            isTree\r\n                            rowHeight={60}\r\n                            // defaultExpandAllRows\r\n\r\n                            //데이터 키 기준\r\n                            rowKey=\"id\"\r\n                            width={1450}\r\n                            height={800}\r\n\r\n                            // 테이블에 들어갈 데이터\r\n                            data={data}\r\n                            wordWrap\r\n\r\n                            // 아이콘 변경 프로퍼티\r\n                            renderTreeToggle={(icon, rowData, expand) => {\r\n                                if (expand) {\r\n                                    return <Icon className='bom-tree-button' icon='minus-circle' />;\r\n                                }\r\n                                else {\r\n                                    return <Icon className='bom-tree-button' icon='plus-circle' />;\r\n                                }\r\n                            }}\r\n                        >\r\n\r\n                            <Column width={250} verticalAlign={'middle'} className='bom-tree-row-1'>\r\n                                <HeaderCell>BOMCD</HeaderCell>\r\n                                <Cell dataKey=\"bomcd\" />\r\n                            </Column>\r\n\r\n                            {/* treeCol  >  버튼이 생기는 위치 \r\n                                모든 레벨에 버튼을 붙이고 css에서 default로 버튼을 없앤 후 레벨에 맞는 곳에만 보여지도록 함*/}\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-2' align={'center'}>\r\n                                <HeaderCell>Level_1</HeaderCell>\r\n                                <Cell dataKey=\"level_1\" />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-3' align={'center'}>\r\n                                <HeaderCell>Level_2</HeaderCell>\r\n                                <Cell dataKey='level_2' />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-4' align={'center'}>\r\n                                <HeaderCell>Level_3</HeaderCell>\r\n                                <Cell dataKey='level_3' />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-5' align={'center'}>\r\n                                <HeaderCell>Level_4</HeaderCell>\r\n                                <Cell dataKey='level_4' />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-6' align={'center'}>\r\n                                <HeaderCell>Level_5</HeaderCell>\r\n                                <Cell dataKey='level_5' />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-7' align={'center'}>\r\n                                <HeaderCell>Level_6</HeaderCell>\r\n                                <Cell dataKey='level_6' />\r\n                            </Column>\r\n\r\n                            <Column width={150} treeCol={true} verticalAlign={'middle'} className='bom-tree-row-8' align={'center'}>\r\n                                <HeaderCell>Level_7</HeaderCell>\r\n                                <Cell dataKey='level_7' />\r\n                            </Column>\r\n\r\n                            <Column width={150} verticalAlign={'middle'} className='bom-tree-row-9' align={'center'}>\r\n                                <HeaderCell>확인</HeaderCell>\r\n                                <Cell dataKey='confirm' />\r\n                            </Column>\r\n\r\n                        </Table>\r\n                    </div>\r\n\r\n                    {/* /BOM Tree Table/  */}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeTable;\r\n","export default __webpack_public_path__ + \"static/media/button_arrow.aae3a21a.PNG\";","import React from 'react'\r\nimport './Input1Main.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// 왼쪽 사이드 셀렉트 박스 화살표 이미지\r\nimport button_arrow from '../img/button_arrow.PNG'\r\n\r\n// 더미 데이터\r\nimport { bom_list_change_tree } from '../json/bom_data_dummy'\r\n\r\n// 더미 데이터 가져오기\r\nconst bom_list = bom_list_change_tree();\r\n\r\n// 선택한 아이템들을 저장할 배열\r\nlet list = [];\r\n\r\n// 선택한 아이템 배열을 스텝 2에 넘겨주기 위한 변수 \r\nlet send_text_list = [];\r\n\r\nclass Input1Main extends React.Component {\r\n\r\n    state = {\r\n        value: null,   // 인덱스 저장용\r\n        selected: false,  // 목록 뷰 플래그 용\r\n        item: null,  // 선택된 아이템 저장용\r\n        item_level: 0,  // 눌러야 할 레벨 저장용\r\n        parent_item: '',  // 부모 아이템 저장용\r\n        item_count: ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],  // 선택된 아이템 갯수 저장용\r\n        list: ['-', '-', '-', '-', '-', '-', '-']  // 사이드 텍스트 박스 저장용\r\n    };\r\n\r\n    /* 사이드 콤보 박스 클릭시\r\n    콤보 박스 목록 뷰 트리거 on */\r\n    selectView = (index) => {\r\n\r\n        /* 순서대로 레벨 박스를 클릭할 수 있도록 막는 코드 */\r\n        if (Number(index) !== (Number(this.state.item_level) + 1)) {\r\n            return false;\r\n        }\r\n\r\n        /* 트리거 on , 인덱스 저장*/\r\n        this.setState({ selected: true });\r\n        this.setState({ value: index });\r\n\r\n        /* 저장 배열을 전역으로 사용했기에 사용할 때 마다 초기화 작업\r\n        state로 쓸라고 했더니 무한 렌더링을 해결 못해서 전역 변수로 사용 */\r\n        if (list !== null) {\r\n            list = [];\r\n        }\r\n    }\r\n\r\n    /* 콤보 박스 목록 뷰 트리거 on 됬을 시\r\n    트리 탐색 시작 , 매핑된 배열 콤보 박스 목록 뷰 태그로 반환 */\r\n    selectLevel = (index) => {\r\n        let ret = null;\r\n\r\n        /* 봄 리스트 데이터 탐색 */\r\n        bom_list.bom_list.forEach(node => this.GetData(node));\r\n\r\n        /* 매핑된 배열 태그로 변환 */\r\n        ret = list.map((n) => {\r\n            return (\r\n                <div className={`bom-user-input1-select-view-box`} onClick={() => this.selectItem(index - 1, n)}>\r\n                    <div>{n} </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return ret;\r\n    }\r\n\r\n\r\n    /* 봄 리스트 탐색 함수 */\r\n    GetData = (node) => {\r\n        /* 레벨 1 클릭시 자식 검색 없이 바로 매핑 */\r\n        if ((this.state.item_level) === 0) {\r\n            this.NodePush(node);\r\n        } else {\r\n            let item = node.data.item;\r\n            /* 자식이 잇는지 */\r\n            if (node.child && node.child.length > 0) {\r\n                /* 저장한 상위 레벨 아이템과 매핑 됬는지 */\r\n                if (item === (this.state.parent_item)) {\r\n                    /* 됬으면 자식 노드들의 데이터들 저장 */\r\n                    node.child.forEach(nodes => this.NodePush(nodes));\r\n                    return true;\r\n                } else {\r\n                    /* 안됬으면 찾을때 까지 루프 */\r\n                    node.child.forEach(childNode => this.GetData(childNode));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 매핑된 아이템 전역 배열에 저장 */\r\n    NodePush = (node) => {\r\n        list.push(node.data.item);\r\n    }\r\n\r\n\r\n    /* 콤보 박스 목록 아이템 클릭시\r\n    선택한 아이템 화면에 적용시킴 */\r\n    selectItem = (index, value) => {\r\n        /* 선택한 아이템 텍스트 박스에 적용\r\n        state 배열에 바로 적용하지 못해서 변수 배열에 적용한 뒤 업데이트 시켜줌 */\r\n        send_text_list = this.state.list;\r\n        send_text_list[index] = value;\r\n        this.setState({ list: send_text_list });\r\n        /* 콤보 박스 목록 뷰 트리거 off */\r\n        this.setState({ selected: false });\r\n\r\n        /* 선택한 아이템 장치 레벨 선택 뷰에 적용시킴 */\r\n        let str = '';\r\n        let itemStr = '';\r\n        for (let i = 0; i < 7; i++) {\r\n            if (this.state.list[i] !== '-') {\r\n                if (i === 0) {\r\n                    str = (str + '' + this.state.list[i]);\r\n                } else {\r\n                    str = (str + '　　　>　　　' + this.state.list[i]);\r\n                }\r\n            }\r\n            else { break; }\r\n        }\r\n\r\n        itemStr = (<p>\r\n            {str}\r\n        </p>);\r\n\r\n        this.setState({ item: itemStr });\r\n\r\n        /* 레벨 순에 맞게 누르도록 방지해주는 코드 */\r\n        // this.setState({ function(state) {return { item_level : state.item_level + 1 };}  });     아래랑 같은 코드\r\n        this.setState((state) => ({ item_level: state.item_level + 1 }));\r\n\r\n        /* 상위 노드 아이템 저장 */\r\n        this.setState({ parent_item: value });\r\n\r\n        /* 선택한 아이템의 갯수 매핑 */\r\n        this.setCount(value);\r\n    }\r\n\r\n    /* 선택한 아이템의 갯수 탐색 */\r\n    setCount = (n) => {\r\n        bom_list.bom_list.forEach((node) => this.searchItem(node, n));\r\n    }\r\n\r\n    /* 선택한 아이템의 갯수 매핑 후 화면에 적용 */\r\n    searchItem = (node, item) => {\r\n        if (item === node.data.item) {\r\n            this.setState(() => ({ item_count: node.data.count }));\r\n        }\r\n\r\n        if (node.child && node.child.length > 0) {\r\n            node.child.forEach(childnode => this.searchItem(childnode, item));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className='bom-user-step1-all'>\r\n\r\n                    {/* 유저 헤더 */}\r\n\r\n                    <div className='bom-user-header-div'>\r\n                        <div className='bom-user-header-flex'>\r\n                            <div className='bom-user-header-link'>BOM 등록</div>\r\n                            <div className='bom-user-header-link'>BOM LIST</div>\r\n                            {/* <div className='header-link'>관리자 페이지</div> */}\r\n                        </div>\r\n                        <div className='bom-user-header-logout'>LOGOUT</div>\r\n                    </div>\r\n\r\n                    {/* /유저 헤더/ */}\r\n\r\n                    {/* 유저 BOM 상태 상단 바 */}\r\n\r\n                    <div className='bom-user-status-bar'>\r\n                        BOM 기본 정보 (Step 1)\r\n                    </div>\r\n\r\n\r\n                    {/* 유저 BOM 입력-1 콘텐츠 */}\r\n\r\n                    <div className='bom-user-input1-main-flex'>\r\n\r\n                        {/* 유저 BOM 입력-1 사이드 사이드 바 */}\r\n\r\n                        <div className='bom-user-input1-select-bar'>\r\n                        <div className='bom-user-input1-select-table-wrap'>\r\n                                {/* 유저 BOM 입력-1 사이드 셀렉트 박스 */}\r\n\r\n                                <div className='bom-user-input-select-box-div'>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('1')}>\r\n                                            <button type='button'  ><span>Level1</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[0]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('2')}>\r\n                                            <button type='button'  ><span>Level2</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[1]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('3')}>\r\n                                            <button type='button'  ><span>Level3</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[2]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('4')}>\r\n                                            <button type='button'  ><span>Level4</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[3]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('5')}>\r\n                                            <button type='button'  ><span>Level5</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[4]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('6')}>\r\n                                            <button type='button'  ><span>Level6</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[5]}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input1-select-box'>\r\n                                        <div className='bom-user-input1-button_box' onClick={() => this.selectView('7')}>\r\n                                            <button type='button'  ><span>Level7</span></button>\r\n                                            <img src={button_arrow} alt=''></img>\r\n                                        </div>\r\n                                        <p>{this.state.list[6]}</p>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                                {/* /유저 BOM 입력-1 사이드 셀렉트 박스/ */}\r\n\r\n                                {/* 유저 BOM 입력-1 사이드 셀렉트 뷰 */}\r\n                                {/* 셀렉트 선택 뷰 뜨기 위한 공간을 만들어 두고 버튼을 클릭하면 뷰가 보이도록 만들어둠 */}\r\n                                <div className={`bom-user-input1-select-view-div margin${this.state.value}`}>\r\n                                    {this.state.selected ?\r\n\r\n                                        this.selectLevel(this.state.value)\r\n                                        : (null)\r\n                                    }\r\n                                </div>\r\n\r\n                                {/* /유저 BOM 입력-1 사이드 셀렉트 뷰/ */}\r\n                            \r\n                        </div>\r\n\r\n\r\n                        {/* /유저 BOM 입력-1 사이드 셀렉트 바/ */}\r\n\r\n                        {/* 유저 BOM 입력-1 메인 */}\r\n\r\n                        <div>\r\n\r\n                            {/* BOM 입력-1 form-1 */}\r\n\r\n                            <form className='bom-user-input-form'>\r\n                                <fieldset className='bom-user-input-form-fieldset'>\r\n                                    <legend className='bom-user-input-form-legend'><b>장치 Level</b></legend>\r\n                                    <div className='bom-user-input-form1-pre-div'>\r\n                                        <p>{this.state.item}</p>\r\n                                    </div>\r\n                                    <div className='bom-user-input-form1-bomcd'><span>BOM Code: </span> <select><option>01</option></select></div>\r\n                                    <div className='bom-user-input-form1-text'><b>장치 명</b> : <input type='text' /></div>\r\n                                </fieldset>\r\n                            </form>\r\n\r\n                            {/* /BOM 입력-1 form-1/ */}\r\n\r\n                            {/* BOM 입력-1 form-2 */}\r\n\r\n                            <form className='bom-user-input-form'>\r\n                                <fieldset className='bom-user-input-form-fieldset'>\r\n                                    <legend className='bom-user-input-form-legend'><b>수량</b></legend>\r\n                                    <div className='bom-user-input-form2'>\r\n                                        <div className='bom-user-input-form2-header'>\r\n                                            <p>Ass'y별 수량</p>\r\n                                            <p>TC1</p>\r\n                                            <p>M1</p>\r\n                                            <p>M2</p>\r\n                                            <p>T1</p>\r\n                                            <p>M2</p>\r\n                                            <p>T2</p>\r\n                                            <p>T1</p>\r\n                                            <p>M1</p>\r\n                                            <p>M2</p>\r\n                                            <p>TC2</p>\r\n                                            <p>총 수량</p>\r\n                                        </div>\r\n\r\n                                        {/* 수량 더미 부분 */}\r\n                                        <div className='bom-user-input-form2-count'>\r\n                                            <p>{this.state.item_count[0]}</p>\r\n                                            <p>{this.state.item_count[1]}</p>\r\n                                            <p>{this.state.item_count[2]}</p>\r\n                                            <p>{this.state.item_count[3]}</p>\r\n                                            <p>{this.state.item_count[4]}</p>\r\n                                            <p>{this.state.item_count[5]}</p>\r\n                                            <p>{this.state.item_count[6]}</p>\r\n                                            <p>{this.state.item_count[7]}</p>\r\n                                            <p>{this.state.item_count[8]}</p>\r\n                                            <p>{this.state.item_count[9]}</p>\r\n                                            <p>{this.state.item_count[10]}</p>\r\n                                            <p>{this.state.item_count[11]}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n                            </form>\r\n\r\n                            {/* /BOM 입력-1 form-2/ */}\r\n\r\n                        </div>\r\n\r\n                        {/* /유저 BOM 입력-1 메인/ */}\r\n\r\n\r\n                        {/* 유저 BOM 입력 Step 2 버튼 */}\r\n\r\n                        <div className='bom-user-input-arrow-box'>\r\n                            <div className='bom-user-input-arrow'>\r\n                                <Link to='/step2'>→</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* /유저 BOM 입력 Step 2 버튼/ */}\r\n\r\n                    </div>\r\n\r\n                    {/* /유저 BOM 입력-1 콘텐츠/ */}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {send_text_list};\r\n\r\nexport default Input1Main;\r\n","import React from 'react'\r\nimport './Input2Main.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { send_text_list } from './Input1Main'\r\n\r\nclass Input2Main extends React.Component {\r\n\r\n    state = {\r\n        item: null,\r\n    };\r\n\r\n    // 스텝 1에서 선택한 아이템을 장치 Level 바에 적용하기 위한 코드\r\n    // 스텝 1에서 선택한 아이템 화면에 적용시키는 코드랑 같음  selectitem()\r\n    componentDidMount() {\r\n\r\n        const list = send_text_list;\r\n        let str = '';\r\n        let itemStr = '';\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            if (list[i]) {\r\n                if (list[i] !== '-') {\r\n                    if (i === 0) {\r\n                        str = (str + '' + list[i]);\r\n                    } else {\r\n                        str = (str + '　　　>　　　' + list[i]);\r\n                    }\r\n                }\r\n                else { break; }\r\n            }\r\n        }\r\n\r\n        itemStr = (<p>\r\n            {str}\r\n        </p>);\r\n        this.setState({ item: itemStr });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className='bom-user-step2-all'>\r\n\r\n                    {/* 유저 헤더 */}\r\n\r\n                    <div className='bom-user-header-wrap'>\r\n                        <div className='bom-user-header-flex-wrap'>\r\n                            <div className='bom-user-header-link'>BOM 등록</div>\r\n                            <div className='bom-user-header-link'>BOM LIST</div>\r\n                        </div>\r\n                        <div className='bom-user-header-logout'>LOGOUT</div>\r\n                    </div>\r\n\r\n                    {/* /유저 헤더/ */}\r\n\r\n                    {/* 유저 BOM 입력 상단 바 */}\r\n\r\n                    <div className='bom-user-input-status-bar'>\r\n                        BOM 상세 정보 (Step 2)\r\n                    </div>\r\n\r\n                    {/* /유저 BOM 입력 상단 바/ */}\r\n\r\n                    <div className='bom-user-input-step2-flex'>\r\n\r\n                        {/* 유저 BOM 입력 Step 1 버튼 */}\r\n\r\n                        <div className='bom-user-input2-arrow-box'>\r\n                            <div className='bom-user-input2-arrow'>\r\n                                <Link to='/'>←</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* /유저 BOM 입력 Step 1 버튼/ */}\r\n\r\n                        {/* 유저 BOM 장치 레벨 상단바 */}\r\n\r\n                        <div className='bom-user-input2-content'>\r\n\r\n                                {/* 장치 level 바*/}\r\n\r\n                                <form>\r\n                                    <fieldset className='bom-user-input-device-bar-fieldset'>\r\n                                        <legend className='bom-user-input-device-bar-legend'><b>장치 Level</b></legend>\r\n                                            <p>{this.state.item_list_tag}</p>\r\n                                    </fieldset>\r\n                                </form>\r\n\r\n                                {/* /장치 level 바/ */}\r\n\r\n                            {/* /유저 BOM 장치 레벨 상단바/ */}\r\n\r\n                            {/* 유저 BOM 입력 스텝2 입력창 */}\r\n\r\n                            <div className='bom-user-input2-text-all-div'>\r\n                                <div className='bom-user-input2-text-div1'>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>제작사 코드:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>품　　　 명:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>규　　　 격:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>단　　　 위:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>재　　　 질:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>위　　　 치:</span>\r\n                                        <select>\r\n                                            <option>선택해주세요</option>\r\n                                            <option>상하</option>\r\n                                            <option>옥상</option>\r\n                                            <option>실내</option>\r\n                                            <option>대차</option>\r\n                                            <option>운전실</option>\r\n                                            <option>차체</option>\r\n                                            <option>기타</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>도면　 번호:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='bom-user-input2-text-div2'>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>　　국/외산:</span>\r\n                                        <select>\r\n                                            <option>선택해주세요</option>\r\n                                            <option>국산</option>\r\n                                            <option>외산</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>　　제조 국:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>　　업체 명:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='bom-user-input2-text-div3'>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>LRU/LLRU: </span>\r\n                                        <select>\r\n                                            <option>선택해주세요</option>\r\n                                            <option>LRU</option>\r\n                                            <option>LLRU</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>　예비　품:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>단가　 (원):</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                    <div className='bom-user-input2-text-box'>\r\n                                        <span>비　　　고:</span>\r\n                                        <input type='text'></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* /유저 BOM 입력 스텝2 입력창/ */}\r\n\r\n                            {/* 유저 BOM 입력 스텝2 버튼 */}\r\n\r\n                            <div className='bom-user-input2-button-div'>\r\n                                <button type='button'>등록</button>\r\n                                <button type='button'>취소</button>\r\n                            </div>\r\n\r\n                            {/* /유저 BOM 입력 스텝2 버튼/ */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input2Main;\r\n","import React, {Component} from 'react';\r\nimport ReactExport from 'react-data-export';\r\n\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst multiDataSet = [\r\n    {\r\n        columns: [\r\n            {title: \"Headings\", width: {wpx: 80}},//pixels width \r\n            {title: \"Text Style\", width: {wch: 80}},//char width \r\n            {title: \"Colors\", width: {wpx: 90}},\r\n        ],\r\n        data: [\r\n            [\r\n                {value: \"H1\", style: {font: {sz: \"24\", bold: true}}},\r\n                {value: \"Bold\", style: {font: {bold: true}}},\r\n                {value: \"Red\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FFFF0000\"}}}},\r\n            ],\r\n            [\r\n                {value: \"H2\", style: {font: {sz: \"18\", bold: true}}},\r\n                {value: \"underline\", style: {font: {underline: true}}},\r\n                {value: \"Blue\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FF0000FF\"}}}},\r\n            ],\r\n            [\r\n                {value: \"H3\", style: {font: {sz: \"14\", bold: true}}},\r\n                {value: \"italic\", style: {font: {italic: true}}},\r\n                {value: \"Green\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}}}},\r\n            ],\r\n            [\r\n                {value: \"H4\", style: {font: {sz: \"12\", bold: true}}},\r\n                {value: \"strike\", style: {font: {strike: true}}},\r\n                {value: \"Orange\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FFF86B00\"}}}},\r\n            ],\r\n            [\r\n                {value: \"H5\", style: {font: {sz: \"10.5\", bold: true}}},\r\n                {value: \"outline\", style: {font: {outline: true}}},\r\n                {value: \"Yellow\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FFFFFF00\"}}}},\r\n            ],\r\n            [\r\n                {value: \"H6\", style: {font: {sz: \"7.5\", bold: true}}},\r\n                {value: \"shadow\", style: {font: {shadow: true}}},\r\n                {value: \"Light Blue\", style: {fill: {patternType: \"solid\", fgColor: {rgb: \"FFCCEEFF\"}}}}\r\n            ]\r\n        ]\r\n    }\r\n];\r\nclass Test_excel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ExcelFile element={<button>Download Data With Styles</button>}>\r\n                    <ExcelSheet dataSet={multiDataSet} name=\"Organization\"/>\r\n                </ExcelFile>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test_excel;","import './App.css';\nimport './BOM/BOM_User_Header.css'\n// import BOM_User_Input_Step1 from './BOM/BOM_Input/BOM_User_Input_Step1'\n// import BOM_User_Input_Step2 from './BOM/BOM_Input/BOM_User_Input_Step2'\nimport BOM_User_Input from './BOM/BOM_Input/BOM_User_Input'\nimport PBS_List from './BOM/BOM_PBS/PBS_List'\nimport BOM_Tree from './BOM/BOM_Tree'\nimport Input1Main from './backup/Input1Main';\nimport Input2Main from './backup/Input2Main';\nimport {BrowserRouter as Router, Route,Switch}  from 'react-router-dom';\nimport Test from './test/test_excel';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Switch>\n            <Route exact path='/' component={BOM_Tree}></Route>\n            <Route path='/admin_pbs_list' component={PBS_List}></Route>\n          </Switch>\n        </Router>\n\n          {/* <Router>\n          <Route path='/' component={BOM_User_Input} />\n          </Router> */}\n\n          {/* <Router>\n          <Switch>\n          <Route exact path=\"/step1\" component={Input1Main}></Route>\n          <Route path=\"/step2\" component={Input2Main}></Route>\n          </Switch>\n        </Router> */}\n        {/* <Test /> */}\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './css/common.css'\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n\n\n/*\n  <React.StrictMode>\n  <App />\n</React.StrictMode>\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}